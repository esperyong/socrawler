package main

import (
	"context"
	"fmt"
	"time"

	"github.com/sirupsen/logrus"
)

// handleHelloWorld handles the hello_world tool call
func (s *AppServer) handleHelloWorld(ctx context.Context, args map[string]interface{}) *MCPToolResult {
	logrus.Info("MCP: Executing hello_world tool")

	// Parse arguments
	name, _ := args["name"].(string)
	message, _ := args["message"].(string)

	// Set default values
	if name == "" {
		name = "World"
	}
	if message == "" {
		message = "Hello"
	}

	// Create response text
	resultText := fmt.Sprintf("%s, %s! ðŸŒŸ", message, name)

	// Add timestamp and server info
	timestamp := time.Now().Format("2006-01-02 15:04:05")
	fullResponse := fmt.Sprintf(`%s

---
Generated by gomcp-scaffold at %s
This is a sample MCP tool demonstrating basic functionality.
You can customize this tool or add new ones in tools.go`, resultText, timestamp)

	logrus.Infof("Hello world tool executed: name=%s, message=%s", name, message)

	return &MCPToolResult{
		Content: []MCPContent{{
			Type: "text",
			Text: fullResponse,
		}},
		IsError: false,
	}
}
